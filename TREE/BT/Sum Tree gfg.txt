public:
    pair<bool,int> helper(Node* root){
        if(root==NULL){
            pair<bool,int> p=make_pair(true,0);
            return p;
        }
        if(root->left==NULL&&root->right==NULL){
            pair<bool,int> p=make_pair(true,root->data);
             return p;
         }
         
         pair<bool,int> leftAns=helper(root->left);
         pair<bool,int> rightAns=helper(root->right);
         bool left=leftAns.first;
         bool right=rightAns.first;
         bool abc=leftAns.second+rightAns.second==root->data;
         pair<bool,int> ans;
         if(left&&right&&abc){
             ans.second=2*root->data;
             ans.first=true;
             
         }
         else{
             ans.first=false;
         }
         return ans;
    }
    bool isSumTree(Node* root)
    {
         // Your code here
         return helper(root).first;
         
         
    }