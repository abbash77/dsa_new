void allTraversal(Node* root)
{
    vector<int> pre;
    vector<int> post;
    vector<int> in;
    stack<pair<Node*, int> > s;
    s.push(make_pair(root, 1));
    while (!s.empty()) {
        pair<Node*, int> p = s.top();
        if (p.second == 1) {
            p.second++;
            pre.push_back(p.first->data);
            if (p.first->left) {
                s.push(make_pair(
                    p.first->left, 1));
            }
        }
        else if (p.second == 2) {
            p.second++;
            in.push_back(p.first->data);
            if (p.first->right) {
                s.push(make_pair(
                    p.first->right, 1));
            }
        }
        else {
            post.push_back(p.first->data);
            s.pop();
        }
    }
}