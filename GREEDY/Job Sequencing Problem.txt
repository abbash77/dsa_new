 static bool cmp(Job a,Job b)
    {
        return a.profit>b.profit;
    }
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        
        sort(arr,arr+n,cmp);
     int maxdeadline=INT_MIN;
     for(int i=0;i<n;i++)
     {
         maxdeadline=max(maxdeadline,arr[i].dead);
     }
     
     vector<int>schedule(maxdeadline+1,-1);
     
     int count=0;
     int maxprofit=0;
     
     for(int i=0;i<n;i++)
     {
         int currprofit=arr[i].profit;
         int jobid=arr[i].id;
         int currdeadline=arr[i].dead;
         
         for(int k=currdeadline;k>0;k--)
         {
             if(schedule[k]==-1)
             {
                 count++;
                 maxprofit+=currprofit;
                 schedule[k]=jobid;
                 break;
             }
         }
     }
     vector<int>ans;
     ans.push_back(count);
     ans.push_back(maxprofit);
     return ans;
    } 