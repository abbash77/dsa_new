 static bool cmp(pair<double,Item>a,pair<double,Item>b)
    {
        return a.first>b.first;
    }
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n)
    {
       vector<pair<double,Item>>v;
       for(int i=0;i<n;i++)
       {
           double puv=(1.0*arr[i].value)/arr[i].weight;
           pair<double,Item>temp=make_pair(puv,arr[i]);
           v.push_back(temp);
       }
       sort(v.begin(),v.end(),cmp);
       
       double totalvalue=0;
       for(int i=0;i<n;i++)
       {
           if(v[i].second.weight>W)
          { 
            //   mai sirf fraction le skta
               totalvalue+=W*v[i].first;
               W=0;
           }
           else
           {
               totalvalue+=v[i].second.value;
               W=W-v[i].second.weight;
           }
       }
      return totalvalue;
    }