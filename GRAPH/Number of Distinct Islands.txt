void dfs(vector<vector<int>>&grid,int x0,int y0,int i,int j,vector<pair<int,int>>&v)
    {
        int dx[]={0,0,1,-1};
        int dy[]={1,-1,0,0};
        int n=grid.size();
        int m=grid[0].size();
        if(i<0 || i>=n || j<0 || j>=m || grid[i][j]<=0)
        {
            return;
        }
        grid[i][j]*=-1;
        v.push_back({i-x0,j-y0});
        for(int k=0;k<4;k++)
        {
            dfs(grid,x0,y0,i+dx[k],j+dy[k],v);
        }
    }
    int countDistinctIslands(vector<vector<int>>& grid) {
        // code here
         int r=grid.size();
        int c=grid[0].size();
        set<vector<pair<int,int>>>pos;
        for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
                if(grid[i][j]!=1)
                continue;
                vector<pair<int,int>>v;
                dfs(grid,i,j,i,j,v);
                pos.insert(v);
            }
        }
        return pos.size();
    }