node* findmid(node* head){
	node* s=head;
	node* f=head->next;
	while(f!=NULL&&f->next!=NULL){
		s=s->next;
		f=f->next->next;
	}
	return s;
}
node* merge(node* left,node* right){
	if(left==NULL){
		return right;
	}
	if(right==NULL){
		return left;
	}
	node* ans=new node(-1);
	node* temp=ans;
	while(left!=NULL&&right!=NULL){
		if(left->data<right->data){
			temp->next=left;
			temp=left;
			left=left->next;
		}
		else{
			temp->next=right;
			temp=right;
			right=right->next;
		}
		
	}
	while(left!=NULL){
		temp->next=left;
		temp=left;
		left=left->next;
	}
	while(right!=NULL){
		temp->next=right;
		temp=right;
		right=right->next;
	}
	//ans dummy(-1 waale ko)  node ko point kr rha hoga 
	ans=ans->next;
	return ans;
}
node* mergeSort(node *head) {
    // Write your code here.
	if(head==NULL||head->next==NULL){
		return head;
	}
	node* mid=findmid(head); 
	node* left=head;
	node* right=mid->next;
	mid->next=NULL;
	left=mergeSort(left);
	right=mergeSort(right);
	
	node* result=merge(left,right);
	return result;
}