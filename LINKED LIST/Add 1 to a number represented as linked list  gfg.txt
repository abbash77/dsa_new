class Solution
{
    private:
        Node* reverse(Node* head){
            Node* prev=NULL;
             Node* next=NULL;
             Node* curr=head;
             while(curr!=NULL){
                 next=curr->next;
                 curr->next=prev;
                 prev=curr;
                 curr=next;
             }
             return prev;
        }
    public:
    Node* addOne(Node *head) 
    {
        // Your Code here
        // return head of list after adding one
        Node* head1=reverse(head);
        Node* temp=head1;
        int carry=0;
        int sum=0;
        while(temp!=NULL){
            if(temp==head1){
                sum=temp->data+carry+1;
            }
            else{
                sum=temp->data+carry;
            }
            temp->data=sum%10;
            carry=sum/10;
            temp=temp->next;
        }
        if(carry!=0){
            temp=head1;
            while(temp->next!=NULL){
                temp=temp->next;
            }
            Node* tail=new Node(carry);
            temp->next=tail;
            
        }
        head1=reverse(head1);
        return head1;
        
    }
};