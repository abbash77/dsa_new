Basic recursion
_______________________________________________________

int fib(int n) {
        if(n==0||n==1){
        	return n;
	}
    	int ans=fib(n-1)+fib(n-2);
    	return ans;
    }

TC-2^n
sc-n

Memoization
_________________________________________________________

int fibo(int n,vector<int> &dp){
        if(n==0)return 0;
        if(n==1)return 1;
        if(dp[n]!=-1){
            return dp[n];
        }
        return dp[n]=fibo(n-1,dp)+fibo(n-2,dp);
    }
    int fib(int n) {
        vector<int> dp(n+1,-1);
        return fibo(n,dp);
    }

TC-N
SC-N

Tabulation
_____________________________________________________________
int fib(int n) {
        if(n==0||n==1){
            return n;
        }
        vector<int> d(n+1);
        d[0]=0;
        d[1]=1;
        for(int i=2;i<=n;i++){
            d[i]=d[i-1]+d[i-2];
        }
        return d[n];
    }

TC-N
SC-N

Tabulation with space optimisation
______________________________________________________________

int fib(int n) {
        if(n==0||n==1){
            return n;
        }
        int prev=1;
        int prev2=0;
        int ans;
        for(int i=2;i<=n;i++){
            ans=prev+prev2;
            prev2=prev;
            prev=ans;
        }
        return ans;
    }
TC-N
SC-1

note:climbing stairs solution is same as this